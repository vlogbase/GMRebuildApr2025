Refine the implementation of the preset model buttons and their selector based on the following requirements, modifying the existing code (primarily static/js/script.js, static/css/style.css, and potentially templates/index.html):

Model Selector Trigger:

Add Click Trigger: In addition to the existing right-click (desktop) and long-press (mobile) methods, make the model selector UI appear when the user performs a standard left-click directly on the small down icon (e.g., the element with class .selector-icon) within any preset button.
No Interference: Ensure this new click listener on the icon does not interfere with the main click action of the button itself (which activates the model) or the other existing triggers (right-click/long-press). Use event.stopPropagation() within the icon's click listener if necessary.
Model Selector Positioning:

Position Above Button: When the model selector UI appears, position it directly above the specific preset button that triggered it, with a small gap (e.g., 5-10 pixels) between the top of the button and the bottom of the selector.
Implementation:
In script.js, when opening the selector, get the triggering button's position using getBoundingClientRect().
Calculate the required top and left CSS properties for the selector UI element (which should have position: absolute; or position: fixed; defined in style.css). The top value should be calculated based on the button's top position minus the selector's height and the desired gap. The left value should align the selector horizontally with the button (e.g., buttonRect.left).
Apply these calculated styles before making the selector visible.
Edge Case Handling: Add a check to see if positioning the selector above the button would push it off the top of the viewport. If there isn't enough space above, position the selector below the button instead.
Preset 6 (Free Model) Button Text:

Dynamic Text: Modify the JavaScript logic in script.js that sets the text content of the preset buttons.
Specific Logic for Preset 6: When setting the text for the button with data-preset-id="6":
Retrieve the shortened name of the currently selected free model (using the existing name shortening function).
Set the button's displayed text to "FREE - " + shortenedName (e.g., "FREE - Gemini 2.0 Flash").
Other Presets: Buttons for presets 1-5 should continue to display their shortened model names as before (possibly prefixed with the preset number and icon).
Safety and Context:

Apply these changes carefully to the existing JavaScript functions responsible for event handling, UI updates, and selector positioning.
Ensure CSS supports the absolute/fixed positioning required for the JavaScript calculations.
Modify the code safely, avoiding infinite loops or race conditions.
Update the relevant files (static/js/script.js, static/css/style.css, templates/index.html if needed) to implement these three refinements.